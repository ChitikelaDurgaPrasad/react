import React, { useState, useEffect,Suspense } from 'react';
import { useLoaderData, Await } from 'react-router';

const GitHub = () => {
  const {data} = useLoaderData()
  console.log({data})
  console.log(data)
  // const[data, setData] = useState(null)
  // useEffect(()=>{
  //   const fetchData = async()=>{
  //     const response = await fetch('https://api.github.com/users/hiteshchoudhary');
  //     await new Promise(resolve => setTimeout(resolve, 4000)); // Simulate 4-second delay
  //     setData(await response.json()) ;
  //   }
  //   fetchData();
  //   console.log(data)
  // },[])
  return (
    // <div className='text-center py-4 bg-orange-600'>
    //   GitHub: {data ? data.bio : 'Loading......'}
    // </div>
    <div className='text-center py-4 bg-orange-600'>
      <Suspense fallback={<p>Loading...</p>}>
        <Await resolve={data}>
          {(resolvedData) => (
            // Once resolved, `resolvedData` contains the JSON from the API.
            <p>GitHub Login: {resolvedData.login}</p>
          )}
        </Await>
      </Suspense>
      <br />
    </div>
  );
};

// const githubInfoLoader = async () => {
//   const response = await fetch('https://api.github.com/users/hiteshchoudhary');
//   await new Promise(resolve => setTimeout(resolve, 4000)); // Simulate 4-second delay
//   return await response.json();
// };

const githubInfoLoader = () => {
  return {
    data: new Promise((resolve) => setTimeout(resolve, 4000))
      .then(() => fetch('https://api.github.com/users/hiteshchoudhary'))
      .then(response => response.json())
  };
};

//additional (optional)
export const githubInfoLoader = async () => {
  const promise = fetch('https://api.github.com/users/hiteshchoudhary')
    .then(response => response.json())
    .then(data => new Promise(resolve => setTimeout(() => resolve(data), 4000))); // 4-second delay
  return { data: promise }; // Returns { data: Promise }
};

export { GitHub, githubInfoLoader };

note-----

Above code is for defer use 

note-- for handleing delay data using defer while navigating through links

Layout.jsx

import React from 'react'
import { Outlet, useNavigation } from 'react-router-dom'
import { Header, Footer } from './Index'

const Layout = () => {
  const navigation = useNavigation()

  return (
    <>
      <Header />
      
      {/* Full-page loading overlay */}
      {navigation.state === 'loading' && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundColor: 'rgba(255, 255, 255, 0.9)',
          zIndex: 1000,
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          backdropFilter: 'blur(3px)'
        }}>
          <div style={{
            padding: '2rem',
            background: '#ffeb3b',
            borderRadius: '8px',
            boxShadow: '0 2px 10px rgba(0,0,0,0.1)'
          }}>
            Loading GitHub Data...
          </div>
        </div>
      )}
      
      {/* Main content area - hidden during loading */}
      <main style={{ 
        marginTop: '20px',
        visibility: navigation.state === 'loading' ? 'hidden' : 'visible'
      }}>
        <Outlet />
      </main>
      
      <Footer />
    </>
  )
}

export default Layout

GitHub.jsx
import React from 'react';
import { useLoaderData } from 'react-router';

const GitHub = () => {
  const data = useLoaderData();
  console.log("GitHub data:", data); // Debug log

  return (
    <div className='text-center py-4 bg-orange-600'>
      GitHub: {data ? data.bio : 'Loading GitHub data...'}
    </div>
  );
};

const githubInfoLoader = async () => {
  console.log("Loader running"); // Debug log
  const response = await fetch('https://api.github.com/users/hiteshchoudhary');
  await new Promise(resolve => setTimeout(resolve, 4000));
  return await response.json();
};

export { GitHub, githubInfoLoader };

Note : but not achived direct url hit loading using above code.